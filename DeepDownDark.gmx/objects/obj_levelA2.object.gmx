<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Procedural Map Generator
global.pause = false;

global.categorycap[2] = 12;      //unlock story lines for this level

show_debug_message("Entering Room A2");

obj_loadingscreen.visible = true;

randomize(); 
basechance = 0.2;       //base chance of removing a huge block and replacing with an empty one 0.3 good mix- 0 = tight walkblock path only

newblockoverlaychance = 0.7;    //chance of a new block having an overlay added for variety
hugeblockoverlaychance = 0.7;   //chance of a huge block having an overlay added for variety

maxgold = 500;
goldchance = 0.02;     //0.012
goldspread = 25;     // how spread out or clumped gold is-  lower numbers for more spread/less clumping
goldthreshold = 0.5;       //how far down weeblock columns before gold can be placed (1 = never)
vinechance = 0.12;      //chance of vines being added- overall amount of greenery
vinethreshold = 0.6;       //how far down weeblock columns before vines can be placed (1 = never)
asteroidchance = 0.20;       //chance of asteroids being added
goldasteroidchance = 0.15;   //chance of gold asteroid being added 0.1
goldnuggetchance = 0.02;     //chance of gold nugget being added
glassasteroidchance = 0.0;     //chance of indestructible asteroid


minspike = 1;       //minimum number of normal blocks to add to each edge- should always be at least 1
maxspike = 2; //how much normal blocks jut in from edges- defines overall corridor width (less equals wider)- normal 4 max possible = 7
mingap = 6;       //how big a gap there will always be between N/S and E/W corridors (allow for -2 due to wee blocks) 5  min = 4
spikyness = 1;      // how much wee blocks jut in from edges to empty space- minimum number of wee blocks + 1  /1
minweespike = 1;
maxweespike = 2;        //cannot be higher than 4!

// spikers
spikerdensitymin = 0.15;        //chance of spiker are at start of level 0.03
spikerdensitymax = 0.25;          //maximum chance of spiker 0.2 is very dense!
spikerdensityrange = spikerdensitymax - spikerdensitymin;
spikerstartblock = 0.1;           //spikers do not start spawning until this % empty huge blocks in
spikerendblock = 0.9;             //no more spikers after this % huge blocks
spikerdensity = spikerdensitymin;
spikerdensitycurrent = 0;

// ballplants
ballplantdensitymin = 0.00;        //chance of ballplant are at start of level 0.03
ballplantdensitymax = 0.00;          //maximum chance of ballplant 0.2 is very dense!
ballplantdensityrange = ballplantdensitymax - ballplantdensitymin;
ballplantstartblock = 0.1;           //ballplants do not start spawning until this % empty huge blocks in
ballplantendblock = 0.90;             //no more ballplant after this % huge blocks
ballplantdensity = ballplantdensitymin;
ballplantdensitycurrent = 0;

// nightgaunts
gauntchance = 0.0;        //chance of a huge square being populated with gaunts 0.3
gauntdensitymin = 0.05;        //how dense gaunts are at start of level 0
gauntdensitymax = 0.1;          //maximum density of gaunts
gauntdensityrange = gauntdensitymax - gauntdensitymin;
gauntstartblock = 0.1;           //gaunts do not start spawning until this % empty huge blocks in
gauntendblock = 0.95;             //no more gaunts after this % huge blocks
gauntdensity = gauntdensitymin;
gauntdensitycurrent = 0;

// spores
sporechance = 0.6;        //chance of a huge square being populated with spores 0.3
sporedensitymin = 0.05;        //how dense gaunts are at start of level 0
sporedensitymax = 0.14;          //maximum density of spores
sporedensityrange = sporedensitymax - sporedensitymin;
sporestartblock = 0.4;           //spores do not start spawning until this % empty huge blocks in
sporeendblock = 0.95;             //no more spores after this % huge blocks
sporedensity = sporedensitymin;
sporedensitycurrent = 0;
startsporeoffsetangle = 0;
startsporeoffsetdistance = 24;
sporeoffsetangle = startsporeoffsetangle;
sporeoffsetdistance = startsporeoffsetdistance;

//grabbers
grabberone = false;              //one grabber
grabberoneblockmin = 0.05;      //% minimum through huge blocks to look for a N/S or E/W square
grabberoneblockmax = 0.2;       //% max to look for free square
grabbertwo = false;              //second grabber
grabbertwoblockmin = 0.25;      //% minimum through huge blocks to look for a N/S or E/W square
grabbertwoblockmax = 0.8;       //% max to look for free square


//wreckage
weapon = global.WeaponProgression[4]
weaponB = global.WeaponProgression[6]
if global.WeaponUnlocked[weapon] == false wreckchance = 0.25
else if global.WeaponUnlocked[weaponB] == false wreckchance = 0.1 
else wreckchance = 0;      //chance of a wreck being in level if a free huge block
wreckadded = false;


global.startx = 0;
global.starty = 0;
global.exitx = 0;
global.exity = 0;

global.weecounter = 0;
            
newbigblockvalue = 0;
gridsize = 8;
bordersize = gridsize*6
spacechance = 0;
currentblock = 0;
totalwalkblocks = 0;

global.startroom = false;

//sfx
chitterfxchance = 0.15;        //chance of a chitter emitter being added to a hugeblock

script_execute(scr_genMap, basechance, spacechance, newbigblockvalue, spikyness, gridsize, maxgold, goldspread, bordersize, minspike, maxspike, mingap, chitterfxchance);

global.loading = false;



//if random(1) &lt; 0.5 xsign = -1 else xsign = 1
//if random(1) &lt; 0.5 ysign = -1 else ysign = 1

background_xscale[1] = 2.0;
background_yscale[1] = 2.0;

instance_create(0,0, obj_HUD);

instance_create(global.startx, global.starty, obj_player);

//ambient audio controls
exited = false;
ambience = snd_LevelAmbience2;
startambience = snd_LevelStart2;
levelstartplayed = false;
loopedambience = false;
startsound = audio_play_sound(startambience, 99, false);
audio_sound_gain(startsound, 0.5, 3000);
startlength = audio_sound_length(startsound) -1;

// fade in from black
vx = view_xview[0];
vy = view_yview[0];
inst = instance_create(vx, vy, eff_fadefromblack)
with(inst)
{
fadeWait = 999.0;       //wait indefinitely- timer set by loading screen instead

}

//obj_loadingscreen.visible = false;      //hide loading screen















    
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(ambience);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_player.x;
y = obj_player.y;

if obj_player.exited == true &amp;&amp; exited == false
{
    exited = true;
    audio_sound_gain(ambience, 0.0, 5000);
}

if levelstartplayed == false
{
    
    position = audio_sound_get_track_position(startsound);
    //show_debug_message(string(startlength) + " , " + string(position)); 
    if position &gt;= startlength
    {
        audio_sound_gain(startambience, 0.0, 3000);
        levelstartplayed = true;
        //show_debug_message("starting ambience loop");    
    }


}
else if levelstartplayed = true &amp;&amp; loopedambience == false
    {
        audio_play_sound(ambience, 101, true);
        audio_sound_gain(ambience, 0.5, 3000);
        loopedambience = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="71">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// debug gold

global.playerGold += 5;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// rerun

game_restart();




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// rerun

//game_restart();

if global.pause == false global.pause = true else global.pause = false;

//        hudx = view_xview[0];
//        hudy = view_yview[0];
//        instance_create(hudx, hudy, obj_PauseLanded);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
