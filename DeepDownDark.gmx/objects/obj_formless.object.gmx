<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_formless</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialise

randomextraworm = 0.3;     //chance of spawning a random extra worm higher up

starty = y;
startx = x;

//bobbing
targetx = x;
targety = y;
vx = 0;
vy = 0;
targetangle = image_angle;
boby = 32;      //amount of vertical bob
bobx = 25;       //amount of horizontal bob
bobangle = 15;  //amount of angular bob
maxtiltxtime = 60;
maxtiltytime = 60;
maxtiltangletime = 120;
xdir = 1;
ydir = -1;
angledir = 1;
tiltxtime = maxtiltxtime;
tiltytime = maxtiltytime;
tiltangletime = maxtiltangletime;

maxspeed = 0.5;
currentspeed = 0;
acceleration = 0.0025;
deceleration = 0.0015;
turnspeed = 0.05;
decelerating = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//bobbing motion

tiltxtime -= 1;
tiltytime -= 1;
tiltangletime -= 1;

if tiltxtime &lt;= 0  &amp;&amp; decelerating == false
    {
        tiltxtime = maxtiltxtime + random_range(-15, 15);
        targetx = x + (random_range(bobx, bobx + 10) * xdir);
        xdir = round(random_range(-1, 1));     //go in random dir next time
        //currentspeed = 0    
    }
if tiltytime &lt;= 0 &amp;&amp; decelerating == false
    {
        tiltytime = maxtiltytime + random_range(-15, 15);
        if y &lt; starty - 100 ydir = 1;      //always go up if lower than start zone
        if y &gt; starty + 100 ydir = -1;
        targety = y + (random_range(boby, boby + 15) * ydir);
        ydir *= -1;     //go in opposite dir next time 
        //currentspeed = 0   
    }
if tiltangletime &lt;= 0
    {
        tiltangletime = maxtiltangletime + random_range(-15, 15);
        targetangle = image_angle + (random_range(bobangle/2, bobangle) * angledir);
        angledir *= -1;     //go in opposite dir next time    
    }

//movement
destx = targetx;
desty = targety;

if targetx != x || targety != y
    {        
        vx = (destx - x);
        vy = (desty - y);
                    
        len = sqrt((vx * vx) + (vy * vy));
                    
        vx = vx / len;
        vy = vy / len;
    }
if abs(x - destx) &lt; 5 &amp;&amp; abs(y - desty) &lt; 5 decelerating = true
    

if currentspeed &lt;= 0
    {
        currentspeed = 0;
        decelerating = false
    }
if currentspeed &lt; maxspeed &amp;&amp; decelerating == false currentspeed += acceleration
if decelerating == true 
    {
        currentspeed -= deceleration    
    }

x += vx * currentspeed
y += vy * currentspeed
    
    
//rotation
angdif = angle_difference(image_angle, targetangle);
if angdif &lt; -1
    {
        image_angle += turnspeed 
    }
if angdif &gt; -1
    {
        image_angle -= turnspeed 
    }    



//spawn worms
        
        //calculate vars
        // box in which worms spawn- calculated in step time as formless may be moving
        spawnx1 = x - 68;
        spawny1 = y + 37;
        spawnx2 = x + 57;
        spawny2 = y + 72;
                
        //now spawn a worm
        sx = irandom_range(spawnx1, spawnx2);
        sy = irandom_range(spawny1, spawny2);
        sangle = image_angle + 270;
        
        inst = instance_create(sx, sy, obj_fsworm);
        with(inst)
            {
                image_angle = other.sangle;
            
            }
    
if random(1) &lt; randomextraworm
{
        //now spawn an occasional extra worm outside main zone on top half of head
        sx = irandom_range(spawnx1 - 20, spawnx2 + 20);
        sy = irandom_range(spawny1 - 100, spawny1 - 30);
        sangle = image_angle + 270 + random_range(-15, 15);
        
        inst = instance_create(sx, sy, obj_fsworm);
        with(inst)
            {
                image_angle = other.sangle;
                swerveangle = 3;
            
            }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
