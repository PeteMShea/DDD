<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialise vars

global.loading = false;
playerappear = false;
menuvisible = false;
menuappeared = false;
startgame = 0;      //0- in menu, 1- readying for play, 2- start game
newgameselect = false;
fadeblacktitle = false;
fadeblackworld = false;
backalpha = 1.0;
alphafade = 0.05;
objectblendcolour = 0;
objectcolour = make_colour_rgb(0, 0, 0);
titlealpha = 1.0;
titlealphafade = 0.01; 
finaltitlealpha = 0.20;  //how transparent Logo ends up when game starts

audio_sound_gain(snd_DDDLogo, 0, 0);
if!audio_is_playing(snd_DDDLogo) audio_play_sound(snd_DDDLogo, 100, true);                                
audio_sound_gain(snd_DDDLogo, 0.5, 5000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Proceed on mouse press

if mouse_check_button(mb_left) &amp;&amp; menuvisible == false &amp;&amp; menuappeared == false &amp;&amp; startgame == 0
    {
        if instance_exists(eff_titlemask1) eff_titlemask1.x = 1000
        if instance_exists(eff_titlemask2) eff_titlemask2.y = 700
        if instance_exists(eff_titlemask3) eff_titlemask3.x = 1000
        menuvisible = true;
        menuappeared = true;
        fadeblacktitle = true;
        obj_player.y = 488;
        obj_player.auto_y = 0;
        global.autopilot = 999;           
    }

if playerappear == true &amp;&amp; startgame &lt; 2
{
    if obj_player.y &lt; 428 
        {
            //Autopilot
            obj_player.thrustdir = 270;
            obj_player.thrust_angle = 270;
            obj_player.image_angle = 90;        
            global.autopilot = 120;    // time to reach landing point
            obj_player.auto_x = 0;
            obj_player.auto_y = 2.0;
            obj_player.autothrust = 0;
            obj_player.backwards = true;  
        }
        if obj_player.y &gt;= 428 &amp;&amp; obj_player.y &lt; 512      //decelerate at this point
        {
            //Autopilot
            obj_player.thrustdir = 270;
            obj_player.thrust_angle = 270;
            obj_player.image_angle = 90;        
            global.autopilot = 60;    // time to reach landing point
            obj_player.auto_x = 0;
            obj_player.auto_y = 0.5;
            obj_player.autothrust = 0;
            obj_player.backwards = true;  
        }
        if obj_player.y &gt;= 512      //landed
        {
            obj_player.y = 512
            obj_player.auto_y = 0;
            obj_player.backthrust = false;
            obj_player.backwards = false;  
            global.autopilot = 999;
            fadeblacktitle = true;
                               
            audio_sound_gain(snd_DDDLogo, 0.0, 3);
        }
          
}

//next fade the black title background to reveal the world
if fadeblacktitle == true &amp;&amp; startgame == 0
{
    obj_player.y = 512
    background_alpha [3] = backalpha;
    if backalpha &gt;0 backalpha -= alphafade;
    if backalpha &lt;=0
        {
            fadeblacktitle = false;
            menuvisible = true;
        }
}     

// now menu appears    
if menuvisible == true &amp;&amp; startgame == 0
    {
        obj_player.y = 512    
        if !instance_exists(obj_titlemenu)
        {
        instance_create(0, 0, obj_titlemenu);
        show_debug_message("Creating titlemenu");
        }
        menuvisible = false;
        fadeblacktitle = true;
    }
    
  

if mouse_check_button(mb_left) &amp;&amp; newgameselect == true &amp;&amp; startgame == 0 startgame = 1;

if startgame == 1
    {
        fadeblackworld = true;
        obj_player.y = 512


    }

if fadeblackworld = true &amp;&amp; startgame == 1
{
    global.autopilot = 999;
    obj_player.y = 512 
    objectcolour = make_colour_rgb(objectblendcolour, objectblendcolour, objectblendcolour);
    if objectblendcolour &lt; 255 objectblendcolour += 2;   
    
    with(all)
        {
            image_blend = other.objectcolour;        
        }
    obj_player.image_blend = c_white;
    if instance_exists(obj_redlightglow) obj_redlightglow.image_blend = c_white;
    if instance_exists(obj_redtrail) obj_redtrail.image_blend = c_white;

        
    if titlealpha &gt;= finaltitlealpha
        {
            titlealpha -= titlealphafade;
            background_alpha [2] = titlealpha;
        }
           
    if objectblendcolour &gt;= 255
    {
        fadeblackworld = false;
        startgame = 2;
    }
}

if startgame == 2
{    
    global.autopilot = 999;
    obj_player.y = 512 
    if mouse_check_button(mb_left)
    {
        startgame = 3
        global.autopilot = 60;
        obj_player.thrustdir = 90;
        obj_player.thrust_angle = 90;               
        obj_player.auto_y = -0.7;
        obj_player.autothrust = 7; 
        instance_create(0,0, obj_HUD); 
               
        instance_destroy();
    
    }
}
    





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
