<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_INVRepairIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialise

lockedalpha = 0.15;
readyalpha = 0.55;
rolloveralpha = 0.75;
pressedalpha = 0.95;
pressed = false;
rollover = false;
locked = true;      //locked by default- unlocked if player has repair options available
once = false;
repairtext = false;


if locked == false image_alpha = readyalpha else image_alpha = lockedalpha
targetalpha = image_alpha;
alphafade = 0.02;
fadein = false;
fadeout= false;
fadeDone = false;
finalalpha = targetalpha;
appeared = false;
templocked = false; //used to temporarily freeze the Repair button validity check while inventory performs other actions (e.g. buy something)

repair = false;
damagecost = obj_player.damagecost;

x2 = x + sprite_width;
y2 = y + sprite_height;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// appear
if appeared == false
{
    fadein = true;
    script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
    if fadein == false appeared = true
}


if appeared == true
{    
    if image_alpha &lt; targetalpha image_alpha += alphafade
    if image_alpha &gt; targetalpha image_alpha -= alphafade
    
    if templocked == false
        {
            //check for repair validity    
            damage = round(global.startHealth - global.playerHealth)
            if damage * damagecost &gt;= global.playerGold damage = abs(global.playerGold/damagecost)
            if damage &gt; 0 &amp;&amp; global.playerGold &gt; 1 * damagecost
                {
                    repair = true 
                }
            else
                {
                    repair = false;
                    locked = true;
                    targetalpha = lockedalpha;
                }
            if repair == true
                {            
                    locked = false;
                    targetalpha = readyalpha;
                    fadein = true;
                       
                }
            
            // unlocked
            if locked == false
            {
                script_execute(scr_rolloverbutton);
                if rollover == true repairtext = true else repairtext = false
                
                        
                if pressed == true
                {
                    oLightSource.swoop = true;
                    if once == false
                        {
                            once = true;                            
                            obj_HUD.newgold = global.playerGold - damage * damagecost;
                            obj_HUD.purchase = true;
                            show_debug_message("newgold- " + string(obj_HUD.newgold) + " , playerGold:" + string(global.playerGold));
                        }
                    script_execute(scr_repairdamage, damage, damagecost);        
                    //repair = false;
                    //locked = true;    
                }
            }
        }
    if templocked == true
        {
            repair = false;
            locked = true;
            targetalpha = lockedalpha;        
        }
    if fadeout == true script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
        
}


if fadeDone == true
{
    instance_destroy();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
