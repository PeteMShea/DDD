<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ballplant</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-400</depth>
  <persistent>0</persistent>
  <parentName>obj_block</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialise



spawnedball = false;
launchedball = false;
image_speed = 0;
image_xscale = random_range(0.85,1)
flip = random(1);
if flip &lt; 0.5
    {
        image_yscale = -1.0;
        flip = -1;
    }
else flip = 1;

anim_speed = 0.25;
lastframe = 7;
launchframe = 4;        //frame ball is fired on
wakeuprange = 200;
awake = false;
maxtimetoLOS = 30;     //how frequently to perform LOS check
timetoLOS = maxtimetoLOS;
linedistance = 400;      //how far to look with the LOS check
hit = 0;
done = false;
ballspeed = 4.0;
linestartx = x;
linestarty = y;
aimadjust = 5;     //number of degrees to look left or right for player- if less than this, fire

testx = x + lengthdir_x(200, image_angle);      //check player proximity from this point in air in front of the plant
testy = y + lengthdir_y(200, image_angle);






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>disttoplayer = point_distance(testx, testy, obj_player.x, obj_player.y)

if disttoplayer &lt;= wakeuprange awake = true;

if awake == true
    { 
        if spawnedball == false
            {
                spawnx = x //lengthdir_x(8, image_angle);
                spawny = y // lengthdir_y(8, image_angle);                   
                ball = instance_create(spawnx, spawny, obj_ball);
                ballangle = image_angle;
                with (ball)
                    {
                        image_angle = other.ballangle;                
                    }
                spawnedball = true                  
            }
        if spawnedball == true &amp;&amp; launchedball == false
            {
                playerfrontx = obj_player.x + lengthdir_x(32, obj_player.image_angle);
                playerfronty = obj_player.y + lengthdir_y(32, obj_player.image_angle);
                angletoplayer = point_direction(x, y, playerfrontx, playerfronty);
                anglediff = abs(angle_difference(angletoplayer,image_angle));
                if anglediff &lt;= aimadjust hit = 1                
                
                timetoLOS -= 1;
                if timetoLOS &lt;= 0
                    {
                        timetoLOS = maxtimetoLOS;
                        lineendx = x + lengthdir_x(linedistance, image_angle + aimadjust);
                        lineendy = y + lengthdir_y(linedistance, image_angle + aimadjust);
                        script_execute(LOScheckPlayer, linestartx, linestarty, lineendx, lineendy, linedistance, hit);                                                
                        if hit == 0
                            {
                                lineendx = x + lengthdir_x(linedistance, image_angle - aimadjust);
                                lineendy = y + lengthdir_y(linedistance, image_angle - aimadjust);
                                script_execute(LOScheckPlayer, linestartx, linestarty, lineendx, lineendy, linedistance, hit);
                            }
                    }
                if hit != 0 launchedball = true;  
             }       
         if launchedball == true &amp;&amp; done == false
            {
                image_speed = anim_speed;
                if image_index &gt;= launchframe
                    {
                    angletest = image_angle;
                    with (ball)
                        {
                            fireangle = other.angletest;
                            launch = true;                       
                        }
                    }                                                                    
                if image_index &gt;= lastframe
                    {
                        image_index = lastframe;
                        image_speed = 0;
                        done = true;
                    }                  
                

            }
    }



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
