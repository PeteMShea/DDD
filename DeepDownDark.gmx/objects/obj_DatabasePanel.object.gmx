<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_DatabasePanel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pause = true;

// initialise
xview = view_xview[0];
yview = view_yview[0];

image_alpha = 0;    //start invisible
x = xview + 1313;
y = yview + 58;

bluepanelx = 1290;
bluepanely = 8;

finalalpha = 0.85;
alphafade = 0.04;
fadein = false;
fadeout = false;
fadeDone = false;

appearwait = 15;       //frames until panel appears
panelappeared = false;
overlaysappeared = false;
buttonsappeared = false;
buttony = 60;
buttonx = 680;
buttonxoffset = 118;    //distance from one button to next

// text consts
paleblue = make_colour_rgb(207, 252, 245);
leftx = 740;
shipnamey = 350;
percentx = 1190;       //where health % sit- right justify
statsy = 950;
statsnumberleftx = 900;
rightx = 1030;
statsnumberrightx = 1188;
statsyoffset = 24;


panelsdismissed = false;
launchnow = false; 


// create blue backing panel first and hide &amp;amp; move the HUD

//show_debug_message(string(xview) + " , " + string(yview));
// create blue backing panel first unless one already exists
panelcheck = instance_place(bluepanelx + 4, bluepanely + 4, obj_BluePanel);

if panelcheck == noone instance_create(xview + bluepanelx, yview + bluepanely, obj_BluePanel);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initial delay
if appearwait &gt; 0 appearwait -= 1

if appearwait &lt;= 0 &amp;&amp; panelappeared == false
    {
        fadein = true;
        script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
        if fadein == false panelappeared = true
    }
/*
if panelappeared == true &amp;&amp; overlaysappeared == false
    {
        instance_create(sharkx, sharky, obj_INVshark);
        instance_create(sharkx, sharky, obj_INVsharkdirt);       
        instance_create(sharkx, sharky, obj_INVsharkdamage_ML);
        instance_create(sharkx, sharky, obj_INVsharkdamage_MR);        
        instance_create(sharkx, sharky, obj_INVsharkdamage_CL);        
        instance_create(sharkx, sharky, obj_INVsharkdamage_CR);        
        instance_create(sharkx, sharky, obj_INVsharkdamage_BL);        
        instance_create(sharkx, sharky, obj_INVsharkdamage_BR);        
        instance_create(sharkx, sharky, obj_INVsharkdamage_CC);        
            
        overlaysappeared = true;
    }

if overlaysappeared == true &amp;&amp; buttonsappeared == false
{
    // draw the HUD in new positions
    obj_sanitymeter.xpos = sanitynewx;
    obj_sanitymeter.ypos = sanitynewy;
    
    obj_HUD.hidden = false;
    
    // Add the button icons
    instance_create(xview + buttonx, yview + buttony, obj_LaunchButton);
    instance_create(xview + buttonx + buttonxoffset, yview + buttony, obj_RepairButton);
    instance_create(xview + buttonx + buttonxoffset * 2, yview + buttony, obj_EquipButton);
    instance_create(xview + buttonx + buttonxoffset * 3, yview + buttony, obj_WeaponryButton);
    instance_create(xview + buttonx + buttonxoffset * 4, yview + buttony, obj_DatabaseButton);
    
    buttonsappeared = true;

}

*/

//remove the panels
if panelsdismissed == true &amp;&amp; fadeout = false
{

        
       
        //now fade the  Panel                                                            
        fadein = false;        
        fadeout = true;
}



if fadeout == true &amp;&amp; panelappeared == true
{
    script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
    if fadeDone == true
        {
            instance_destroy();
        }

}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
