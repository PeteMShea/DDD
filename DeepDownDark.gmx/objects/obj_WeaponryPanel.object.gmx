<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_WeaponryPanel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pause = true;

// initialise
xview = view_xview[0];
yview = view_yview[0];

image_alpha = 0;    //start invisible
x = xview + 38;
y = yview + 58;

bluepanelx = 18;
bluepanely = 8;

finalalpha = 0.75;
alphafade = 0.04;
fadein = false;
fadeout = false;
fadeDone = false;

appearwait = 20;       //frames until panel appears
panelappeared = false;
overlaysappeared = false;
buttonsappeared = false;
buttonx = xview + 70;
buttony = yview + 608;
buttonxoffset = 85;    //distance from one button to next
buttonyoffset = 96;    //vertical distance between rows of buttons


// text consts
paleblue = make_colour_rgb(207, 252, 245);
leftx = 740;
shipnamey = 350;
percentx = 1190;       //where health % sit- right justify
statsy = 950;
statsnumberleftx = 900;
rightx = 1030;
statsnumberrightx = 1188;
statsyoffset = 24;


panelsdismissed = false;
launchnow = false; 


// create blue backing panel first and hide &amp;amp; move the HUD

//show_debug_message(string(xview) + " , " + string(yview));


instance_create(xview + bluepanelx, yview + bluepanely, obj_BluePanel);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initial delay
if appearwait &gt; 0 appearwait -= 1

if appearwait &lt;= 0 &amp;&amp; panelappeared == false
    {
        fadein = true;
        script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
        if fadein == false panelappeared = true
    }


if panelappeared == true &amp;&amp; buttonsappeared == false
{
    // iterate through all of the Items checking which are unlocked and adding buttons as required
    weaponcount = 1;
    xpos = buttonx;
    ypos = buttony;
    
    for (r = 1; r &lt; 5; r += 1)
    {
        for(c = 1; c &lt; 7; c += 1)
            {
                if global.WeaponUnlocked[weaponcount] == true
                    {
                        show_debug_message("Adding Item: " + string(weaponcount));
                        inst = instance_create(xpos, ypos, obj_ItemButton);
                        with (inst)
                            {
                                weaponID = other.weaponcount;                        
                            }                                                            
                    }
                xpos += buttonxoffset;            
                if weaponcount &lt;= 24 weaponcount += 1
            } 
        xpos = buttonx;
        ypos += buttonyoffset; 
    }

    
    buttonsappeared = true;

}

/*
//remove the panels
if panelsdismissed == true &amp;&amp; fadeout = false
{

        
        obj_BluePanel.fadeout = true;
        obj_BluePanel.fadein = false;
        obj_INVshark.fadeout = true;
        obj_INVshark.fadein = false;
        obj_INVsharkdirt.fadeout = true;
        obj_INVsharkdirt.fadein = false;
        obj_INVsharkdamage_CL.fadeout = true;
        obj_INVsharkdamage_CL.fadein = false;
        obj_INVsharkdamage_CR.fadeout = true;
        obj_INVsharkdamage_CR.fadein = false;
        obj_INVsharkdamage_ML.fadeout = true;
        obj_INVsharkdamage_ML.fadein = false;
        obj_INVsharkdamage_MR.fadeout = true;
        obj_INVsharkdamage_MR.fadein = false;
        obj_INVsharkdamage_BL.fadeout = true;
        obj_INVsharkdamage_BL.fadein = false;
        obj_INVsharkdamage_BR.fadeout = true;
        obj_INVsharkdamage_BR.fadein = false;
        obj_INVsharkdamage_CC.fadeout = true;
        obj_INVsharkdamage_CC.fadein = false;                                                                          
        obj_RepairButton.fadeDone = true;       //couldn't get these to fade out nicely- so now just insta destroyed... fix?
        obj_RepairButton.fadein = false;
        obj_LaunchButton.fadeDone = true;
        obj_LaunchButton.fadein = false;
        obj_DatabaseButton.fadeDone = true;
        obj_DatabaseButton.fadein = false;
        obj_EquipButton.fadeDone = true;
        obj_EquipButton.fadein = false;
        obj_WeaponryButton.fadeDone = true;
        obj_WeaponryButton.fadein = false;


        
        //destroy and recreate the HUD object to reset its position values
        with(obj_HUD)
            {
                instance_destroy();
            }
        instance_create(x,y, obj_HUD);
        with(obj_sanitymeter)
            {
                instance_destroy();
            }
        instance_create(x,y, obj_sanitymeter);
        launchnow = true;        
        //now fade the status Panel                                                            
        fadein = false;        
        fadeout = true;
}

*/

if fadeout == true &amp;&amp; panelappeared == true
{
    script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
    if fadeDone == true
        {
            instance_destroy();
        }

}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
