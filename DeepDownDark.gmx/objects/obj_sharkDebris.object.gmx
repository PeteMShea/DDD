<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shipSharkDebrisold</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// intialise


min_speed = 0.1;
deceleration = 0.001;      //actually accelerating
bouncecount = 0;
debrisdamage = 0;     //how much damage collision with debris does
lifespan = random_range(1200, 1400);
maxrotspeed = random_range(-0.75, 0.75);
rotacceleration = 0.025;
rotspeed = 0;



image_speed = 0;

// start moving

speed = random_range(0.6, 0.8);
oldspeed = speed;
oldtime = delta_time;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = oldspeed * (delta_time / oldtime);
oldspeed = speed;
oldtime = delta_time;


if hspeed &gt;= min_speed || hspeed &lt;= -min_speed
    {
    
        hspeed -= (sign(hspeed) * deceleration);
    
    }

else
    {
        hspeed = sign(hspeed) * min_speed;
    }


if vspeed &gt;= min_speed || vspeed &lt;= -min_speed
    {
    
        vspeed -= (sign(vspeed) * deceleration);
    
    }
    
else
    {
        vspeed = sign(vspeed) * min_speed;
    }

if rotspeed &lt; maxrotspeed rotspeed += rotacceleration    
    
image_angle += rotspeed;    
    
    

if lifespan &lt;=0
   {
    bx= x;
    by =y;
    script_execute(scr_blockburstvfx, bx, by);
   
    instance_destroy();
    
    }

lifespan -= 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// collided with wall- reverse direction and slow

inst = instance_nearest(x,y,obj_block)

newdir = point_direction(inst.x, inst.y, x, y);

direction = newdir;
speed *= 0.9;

bouncecount += 1;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_asteroid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// intialise


min_speed = 0.1;
deceleration = 0.001;      //actually accelerating
bouncecount = 0;
debrisdamage = 0;     //how much damage collision with debris does
lifespan = random_range(500, 900);
maxrotspeed = random_range(-0.75, 0.75);
rotacceleration = 0.025;
rotspeed = 0;

image_speed = 0;

// start moving

speed = random_range(0.5, 0.7);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sharkDebris">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// intialise


min_speed = 0.1;
deceleration = 0.001;      //actually accelerating
bouncecount = 0;
debrisdamage = 0;     //how much damage collision with debris does
lifespan = random_range(500, 900);
maxrotspeed = random_range(-0.75, 0.75);
rotacceleration = 0.025;
rotspeed = 0;

image_speed = 0;

// start moving

speed = random_range(0.5, 0.7);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
