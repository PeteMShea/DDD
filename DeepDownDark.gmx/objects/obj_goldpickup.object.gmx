<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goldpickup</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialise variables

min_speed = 0.01;
deceleration = 0.0001;
bouncecount = 0;
lifespan = random_range(2100, 2400);

attractdist = obj_player.goldmagnetrange;       //distance at which pickups get sucked into player
attractspeed = obj_player.magnetstrength;     //max speed pickups get sucked into player
acceleration = 0.02;
sucked = false;

playerdist = 0;

image_speed = 0;
image_angle = random_range(0,360);
image_index = irandom_range(0,6);

// start moving

direction = point_direction(x, y, obj_player.x, obj_player.y) + random_range(-15, 15);
speed = 0.5;






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if hspeed &gt;= min_speed || hspeed &lt;= -min_speed
    {
    
        hspeed -= (sign(hspeed) * deceleration);
    
    }

else
    {
        hspeed = sign(hspeed) * min_speed;
    }


if vspeed &gt;= min_speed || vspeed &lt;= -min_speed
    {
    
        vspeed -= (sign(vspeed) * deceleration);
    
    }
    
else
    {
        vspeed = sign(vspeed) * min_speed;
    }

if sucked == false
    {
        playerdist = distance_to_point(obj_player.x, obj_player.y);        
        if playerdist &lt; attractdist
        {
            sucked = true;
        }
    }   

if sucked == true
    {
        playerdist = distance_to_point(obj_player.x, obj_player.y);
        direction = point_direction(x, y, obj_player.x, obj_player.y)
        if speed &lt; attractspeed speed += acceleration;
        if playerdist &lt;=1
            {
                audio_play_sound(snd_GoldPickupCollected, 100, false);
                global.playerGold += 5;
                if oLightSource.yellow == false oLightSource.yellow = true;     //colour ship yellow when pickup is close
                instance_destroy();
            }    
    }    

lifespan -=1;
    
if lifespan &lt;=0
   {
    
    instance_destroy();
    
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_vine">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// collided with wall- reverse direction and slow

if sucked == false
{
hspeed = -hspeed *0.75;
vspeed = -vspeed *0.75;

bouncecount += 1;
}
if bouncecount &gt; 8 direction = random(360);

if bouncecount &gt; 32 lifespan = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_weeblock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// collided with wall- reverse direction and slow
if sucked == false
{

hspeed = -hspeed *0.75;
vspeed = -vspeed *0.75;

bouncecount += 1;
}
if bouncecount &gt; 8 direction = random(360);

if bouncecount &gt; 32 lifespan = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_newblocksprite">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// collided with wall- reverse direction and slow  unless being attracted

if sucked == false
{


hspeed = -hspeed *0.75;
vspeed = -vspeed *0.75;

bouncecount += 1;
}
if bouncecount &gt; 8 direction = random(360);

if bouncecount &gt; 32 lifespan = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_newblock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// collided with wall- reverse direction and slow  unless being attracted

if sucked == false
{


hspeed = -hspeed *0.75;
vspeed = -vspeed *0.75;

bouncecount += 1;
}
if bouncecount &gt; 8 direction = random(360);

if bouncecount &gt; 32 lifespan = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
