<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_orangebullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialise variables

bulletspd = 3 * global.RM;
lifespan = 120;     //number of frames bullet will live for
asteroidmult = 0.25;       //how much damage done to asteroid

start_x = x;
start_y = y;

//show_debug_message(string(start_x) + " , " +  string(start_y));



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Movement

vx = (destx - x);
vy = (desty - y);
    
len = sqrt(vx * vx + vy * vy);
    
vx = vx / len;
vy = vy / len;


x -= vx * bulletspd
y -= vy * bulletspd


// remove bullets over time if no collision
lifespan -= 1;
if lifespan &lt;= 0 instance_destroy();


// Collision detection and resolution
var inst;
inst = instance_place(x, y, obj_blastblock);
if inst != noone
    {
        //create debris tinyblocks
        bx = x
        by = y

        var ix;
        script_execute(scr_blockburstvfx, bx, by);
        //change state or destroy instance of block hit
        with (inst)
        {
            if hitpoints &gt; 0
                {
                    sprite_index = alt_sprite;
                    image_index = irandom_range(0,5);
                    hitpoints -= 1
                }
            else
                {
                    instance_destroy();
                }
        }
        
        //destroy the bullet
        bx = x
        by = y        
        script_execute(scr_bulletsparks, bx, by);        
        instance_destroy();
    }
    
var gold;
gold = instance_place(x, y, obj_gold);
if gold != noone
    {
        instance_create(x, y, obj_goldpickup);
        speed_x = hspeed * 0.75
        speed_y = vspeed * 0.75
        with (gold) instance_destroy();
        bx = x
        by = y
        script_execute(scr_blockburstvfx, bx, by);
        
        //destroy the bullet
        bx = x
        by = y        
        script_execute(scr_bulletsparks, bx, by);
        instance_destroy();
    }

var enemy;
enemy = instance_place(x, y, obj_fixedgunbase);
if enemy != noone
    {
        with(enemy) 
            {
                if currenthealth &gt;0
                {
                
                //create debris tinyblocks
                bx = x
                by = y
                script_execute(scr_blockburstvfx, bx, by);
                
                currenthealth -= 1;
                show_debug_message(string(currenthealth)); 
                
                }           
            }

    }    

var gaunt;
gaunt = instance_place(x, y, obj_gaunt);
if gaunt != noone
    {
        with(gaunt) 
            {
                if currenthealth &gt;0
                {
                
                //create debris tinyblocks
                bx = x
                by = y
                script_execute(scr_smalldebris, bx, by);
                awake = true;
                currenthealth -= 1;
                if hitanim == 0 hitanim = hitanimmax;
                //show_debug_message(string(currenthealth)); 
                
                }           
            }
        //destroy the bullet
        bx = x
        by = y        
        script_execute(scr_bulletsparks, bx, by);
        instance_destroy();

    }     

var spores;
spores = instance_place(x, y, obj_spawn);
if spores != noone
    {
        with(spores) 
            {
                if currenthealth &gt;0
                {
                
                //create debris tinyblocks
                bx = x
                by = y
                script_execute(scr_bulletsparks, bx, by);
                awake = true;
                currenthealth -= 1;
                
                }           
            }
// don't destroy the bullet when shooting spores

    }     
    
var asteroid;
asteroid = instance_place(x, y, obj_asteroid);
if asteroid != noone

    {
    hitangle = point_direction(start_x, start_y, x, y);
    extended_x = x + lengthdir_x(32 * global.RM, hitangle);
    extended_y = y + lengthdir_y(32 * global.RM, hitangle); 
        with(asteroid) 
            {
                asteroidhit = 2;    // 2= hit by bullet
                hit_x = other.x;
                hit_y = other.y;
                //instance_create(hit_x, hit_y, obj_debug);
                ext_x = other.extended_x;
                ext_y = other.extended_y;
                hitspeed_x = other.vx * other.bulletspd * other.asteroidmult * 0.15;
                hitspeed_y = other.vy * other.bulletspd * other.asteroidmult * 0.15;
            }
        //create debris tinyblocks
        bx = x;
        by = y;
        script_execute(scr_blockburstvfx, bx, by);
        bx = x
        by = y        
        script_execute(scr_bulletsparks, bx, by);           
        instance_destroy();

    }         
    
// Collide with anything else- just kill the bullet
if place_meeting(x, y, obj_block)
    {
        bx = x
        by = y        
        script_execute(scr_bulletsparks, bx, by);
        instance_destroy();
    }




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
