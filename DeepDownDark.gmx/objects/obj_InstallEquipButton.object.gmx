<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_INVInstallIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialise

lockedalpha = 0.2;
readyalpha = 0.6;
rolloveralpha = 0.85;
pressedalpha = 0.95;
pressed = false;
rollover = false;
locked = false;


if locked == false image_alpha = readyalpha else image_alpha = lockedalpha
targetalpha = image_alpha;
alphafade = 0.02;
fadein = false;
fadeout= false;
fadeDone = false;
finalalpha = targetalpha;
appeared = false;
once = false;

x2 = x + sprite_width;
y2 = y + sprite_height;






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// appear
if appeared == false
{
    fadein = true;
    script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
    if fadein == false appeared = true
}


if appeared == true
{    
    equipID = global.EquipViewed;
    
    if global.EquipOwned[equipID] == false &amp;&amp; global.EquipCost[equipID] &lt;= global.playerGold locked = false else locked = true
    if global.EquipOwned[equipID] == true locked = false
    
    if locked == true targetalpha = lockedalpha else targetalpha = readyalpha
    
//    if image_alpha &lt; targetalpha image_alpha += alphafade
//    if image_alpha &gt; targetalpha image_alpha -= alphafade

    script_execute(scr_rolloverbutton);

    if pressed == true
    {
        if once == false &amp;&amp; global.EquipOwned[equipID] == false
            {
                obj_HUD.newgold = global.playerGold - global.EquipCost[equipID];
                once = true;
                //lock out other buttons during the upgrade phase
                obj_RepairButton.templocked = true;
                obj_LaunchButton.locked = true;
                obj_DatabaseButton.locked = true;
                obj_WeaponryButton.locked = true;
                
            }               
        if global.playerGold == obj_HUD.newgold
        {
            //unequip all items in same category first
            categorycount = ceil(equipID / 6);
            firstincategory = categorycount * 6 - 5
            for (i = firstincategory; i &lt;= firstincategory + 5; i += 1)
                {
                    global.EquipEquipped[i] = false;
                    show_debug_message("Unequipping Item: " + string(i));
                }
            // now equip the new item            
            global.EquipOwned[equipID] = true;
            global.EquipEquipped[equipID] = true;
            script_execute(scr_updateplayer);
            //now unlock out other buttons during the upgrade phase
            obj_RepairButton.templocked = false;
            obj_LaunchButton.locked = false;
            obj_DatabaseButton.locked = false;
            obj_WeaponryButton.locked = false;            
        }
          
    }
    
    if fadeout == true script_execute(scr_fadeinout, fadein, fadeout, finalalpha, alphafade);
}

if fadeDone == true
{
    instance_destroy();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
