<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialise variables

xview = view_xview[0];
yview = view_yview[0];

x = 960 + xview;        //only used if decide to add a graphic panel at some point
y = 500 + yview;
textx = 960;
text1y = 300;
text2y = 32;
text3y = 64;

visible = false;
read = false;

if !persistent
    {
    persistent = true;
    }

maxdisplaytime = 180;
displaytime = 0;
alphalevel = 0;
maxalpha = 0.8;
alphafade = 0.01
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player)
{
x = obj_player.x;
y = obj_player.y;
}

if visible == true
{
    if read == false
        {
            script_execute(scr_readstory);
            read = true;    
            displaytime = maxdisplaytime;
            alphalevel = 0;

        }
    if alphalevel &lt; maxalpha alphalevel += alphafade
    displaytime -= 1;
    if displaytime &lt;= 0
    {
        visible = false;
        alphalevel = 0;
        global.autopilot = 120;    //start playing moving
        obj_player.auto_x = 0;
        obj_player.auto_y = 0.5;   //downwards thrust
        obj_player.autothrust = 10;   

        if instance_exists(eff_fadefromblack) eff_fadefromblack.fadeWait = 10.0;       //frames 
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if visible == true
{
    draw_set_font(fnt_CapsullaTitle);
    draw_set_alpha(alphalevel);
    draw_set_colour(c_white);
    draw_set_halign(fa_center);
      
    draw_text(textx, text1y, global.displaystring);

        
}

draw_set_alpha(1.0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
