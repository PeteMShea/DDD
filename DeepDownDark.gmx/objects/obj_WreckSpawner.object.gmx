<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialise

//colours
colour[1] = make_colour_rgb(187, 0, 0);     //red
colour[2] = make_colour_rgb(187, 60, 0);     //orange
colour[3] = make_colour_rgb(215, 179, 8);     //yellow
colour[4] = make_colour_rgb(37, 127, 9);     //green
colour[5] = make_colour_rgb(9, 127, 67);     //green blue
colour[6] = make_colour_rgb(9, 127, 114);     //turquoise
colour[7] = make_colour_rgb(64, 127, 179);     //sky blue
colour[8] = make_colour_rgb(54, 63, 193);     //navy blue
colour[9] = make_colour_rgb(119, 61, 217);     //blue purple
colour[10] = make_colour_rgb(150, 49, 100);     //purple red
colour[11] = make_colour_rgb(201, 207, 255);     //silver
colour[12] = make_colour_rgb(241, 231, 59);     //bright yellow
colour[13] = make_colour_rgb(162, 248, 255);     //bright cyan
colour[14] = make_colour_rgb(202, 255, 162);     //bright lime
colour[15] = make_colour_rgb(244, 162, 255);     //pink
colour[16] = make_colour_rgb(255, 162, 181);     //light red
colour[17] = make_colour_rgb(255, 255, 255);     //white/grey


col = irandom_range(1, 17);

// set up array to check what parts we've spawned
totalparts = 19;        //total number of image variations in the wreck sprite
for(i = 0; i &lt;= totalparts; i += 1)
    {
        partspawned[i] = false;
    }

numberofparts = irandom_range(4, totalparts - 5)

//first spawn the blackbox
instance_create(x + random_range(-2, 2), y + random_range(-8, 8), obj_blackbox);

//Now spawn random wreckage parts around the central spawner

angle = 0 + random_range(-30, -10);

for(i = 1; i &lt;= numberofparts; i += 1)      //loop around trying to place random parts in random circle until numberofparts reached- checking free space each time
{
    placed = false;
    distance = random_range(50, 150);
    angle +=  random_range(15, 25);        
    while (placed == false)
        {
            part = irandom_range(0, totalparts)
            if partspawned[part] == false
                {                    
                    spawnx = x + lengthdir_x(distance, angle);
                    spawny = y + lengthdir_y(distance, angle);
                    //if !collision_point(spawnx, spawny, all, true, true)
                        //{
                            inst = instance_create(spawnx, spawny, obj_Wreck);
                            with (inst)
                                {
                                    image_index = other.part;
                                    image_blend = other.colour[other.col];                                                       
                                }
                            placed = true;
                            partspawned[part] = true;                        
                        //}            
                }        
        }

}










</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
