<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sanitymeter80</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialise

xpos = 102;
ypos = 50;
x = view_xview[0] + xpos;
y = view_yview[0] + ypos;

sanityrestore = 0.025;        //how quickly sanity restores per frame in normal peaceful recovery
sanityrecoverymax = 420;       //how many frames of peacetime before sanity begins to restore on its own
sanityrestoretime = sanityrecoverymax;      //timer for counting down to peacetime
basesanityadjust = 0.025;    //how much base sanity increases per frame when player is in madness threshold (level nine+)
madnessinc = 0.25;      //how much sanity level increases per frame whenever player is fearful

sanity = global.baseSanity;


baselevel = global.baseSanity;
baselevelsprite = spr_sanitymeter80;
baselevelspeed = 0.2;
leveltwo = 90;
leveltwosprite = spr_sanitymeter80;
leveltwospeed = 0.25;
levelthree = 100;
levelthreesprite = spr_sanitymeter100;
levelthreespeed = 0.2;
levelfour = 110;
levelfoursprite = spr_sanitymeter100;
levelfourspeed = 0.25;
levelfive = 120;
levelfivesprite = spr_sanitymeter120;
levelfivespeed = 0.2;
levelsix = 135;
levelsixsprite = spr_sanitymeter120;
levelsixspeed = 0.25;
levelseven = 150;
levelsevensprite = spr_sanitymeter150;
levelsevenspeed = 0.2;
leveleight = 165;
leveleightsprite = spr_sanitymeter150;
leveleightspeed = 0.25;
levelnine = 180;
levelninesprite = spr_sanitymeter180;
levelninespeed = 0.2;
levelten = 195;
leveltensprite = spr_sanitymeter180;
leveltenspeed = 0.3;

image_speed = baselevelspeed;
mask = false;
extramask = false;
spritelevel = 0;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if obj_HUD.hidden == true
{
    image_alpha = 0.0
}
else 
{ 
    image_alpha = 1.0
} 

 
// position relative to the viewport
x = view_xview[0] + xpos;
y = view_yview[0] + ypos;



sanity = global.currentSanity

// logic to control sanity reduction-

// if sanity has increased at all reset the restore timer
if global.madness &gt; 0
{
    global.currentSanity += madnessinc;     //add to sanity level every frame
    global.madness -= madnessinc; 
    sanityrestoretime = sanityrecoverymax
}

sanityrestoretime -= 1;

//  wait for restoretime frames then reduce by restore amount
if sanityrestoretime &lt;= 0
{
    if global.currentSanity &gt; global.baseSanity global.currentSanity -= sanityrestore;  //reduce sanity once restore time is up 

}

// increment base sanity level while player is in madness threshold
if sanity &gt;= levelten &amp;&amp; global.baseSanity &lt; 180
    {
        global.baseSanity += basesanityadjust;
    }



// adjust meter graphic based upon sanity levels
if sanity &lt; leveltwo &amp;&amp; spritelevel != 1
    {
        sprite_index = baselevelsprite;
        image_speed = baselevelspeed;
        spritelevel = 1;
    }

if sanity &gt;= leveltwo &amp;&amp; sanity &lt; levelthree &amp;&amp; spritelevel != 2
    {
        sprite_index = leveltwosprite;
        image_speed = leveltwospeed;
        spritelevel = 2
    }

if sanity &gt;= levelthree &amp;&amp; sanity &lt; levelfour &amp;&amp; spritelevel != 3
    {
        sprite_index = levelthreesprite;
        image_speed = levelthreespeed;
        spritelevel = 3
    }

if sanity &gt;= levelfour &amp;&amp; sanity &lt; levelfive &amp;&amp; spritelevel != 4
    {
        sprite_index = levelfoursprite;
        image_speed = levelfourspeed;
        spritelevel = 4
    }
    
if sanity &gt;= levelfive &amp;&amp; sanity &lt; levelsix &amp;&amp; spritelevel != 5
    {
        sprite_index = levelfivesprite;
        image_speed = levelfivespeed;
        spritelevel = 5
    }

if sanity &gt;= levelsix &amp;&amp; sanity &lt; levelseven &amp;&amp; spritelevel != 6
    {
        sprite_index = levelsixsprite;
        image_speed = levelsixspeed;
        spritelevel = 6
    }
        
if sanity &gt;= levelseven &amp;&amp; sanity &lt; leveleight &amp;&amp; spritelevel != 7
    {
        sprite_index = levelsevensprite;
        image_speed = levelsevenspeed;
        spritelevel = 7
    }    

if sanity &gt;= leveleight &amp;&amp; sanity &lt; levelnine &amp;&amp; spritelevel != 8
    {
        sprite_index = leveleightsprite;
        image_speed = leveleightspeed;
        spritelevel = 8
    }   

if sanity &gt;= levelnine  &amp;&amp; sanity &lt; levelten &amp;&amp; spritelevel != 9
    {
        sprite_index = levelninesprite;
        image_speed = levelninespeed;
        spritelevel = 9
    }

if sanity &gt;= levelten &amp;&amp; spritelevel != 10
    {
        sprite_index = leveltensprite;
        image_speed = leveltenspeed;
        spritelevel = 10
    }      

if global.sanityenabled == true
{
    // Add Sanity Vignette mask if sanity above level or destroy it if not
    if mask == false &amp;&amp; sanity &gt;= levelthree
        {
            mask = true
            instance_create(obj_player.x, obj_player.y, obj_sanityvignette);
        
        }
    
    if mask == true &amp;&amp; sanity &lt; levelthree
        {
            obj_sanityvignette.destroy = true;
            mask = false;
        }
    
    // Add extra Sanity  mask if sanity above level or destroy it if not
    if extramask == false &amp;&amp; sanity &gt;= levelsix
        {
            extramask = true
            instance_create(obj_player.x, obj_player.y, obj_sanitymask);
        
        }
    
    if extramask == true &amp;&amp; sanity &lt; levelsix       //kill it a level earlier than it was spawned for smoother transition
        {
            obj_sanitymask.destroy = true;
            extramask = false;
        }

}












                        

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="98">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.currentSanity -=0.25;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="97">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.currentSanity += 0.25;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
